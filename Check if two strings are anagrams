Given two strings s and t, return true if t is an anagram of s, and false otherwise.

Example 1:

Input: s = "anagram", t = "nagaram"

Output: true

Example 2:
Input: s = "rat", t = "car"
Output: false

Constraints:
1 <= s.length, t.length <= 5 * 104
s and t consist of lowercase English letters.
 
Follow up: What if the inputs contain Unicode characters? How would you adapt your solution to such a case?
### Brute Force ###
class Solution {
public:
    bool isAnagram(string s, string t) {
        if(s.length()!=t.length()) return false;

        sort(s.begin(),s.end());
        sort(t.begin(),t.end());

        for(int i=0;i<s.length();i++){
            if(s[i]!=t[i]) return false;
        }
        return true;
      }
};


### optimal ###

class Solution {
public:
    bool isAnagram(string s, string t) {
        
        vector<int> freq(26,0);

       for(auto it:s){
           freq[it-'a']++;
       }
       for(int i=0;i<t.size();i++){
           freq[t[i]-'a']--;
       }
       for(auto it:freq){
           if(it!=0) return false;
       }
       return true;

    }
};
